name: Download jawiki

on:
  workflow_dispatch:

jobs:
  download:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        files:
          - {
              file: "jawiki-latest-redirect.sql.gz",
              rss: "jawiki-latest-redirect.sql.gz-rss.xml",
              sqlite: "jawiki-latest-redirect.sqlite",
            }
          - {
              file: "jawiki-latest-page.sql.gz",
              rss: "jawiki-latest-page.sql.gz-rss.xml",
              sqlite: "jawiki-latest-page.sqlite",
            }
          - {
              file: "jawiki-latest-pagelinks.sql.gz",
              rss: "jawiki-latest-pagelinks.sql.gz-rss.xml",
              sqlite: "jawiki-latest-pagelinks.sqlite",
            }
          - {
              file: "jawiki-latest-linktarget.sql.gz",
              rss: "jawiki-latest-linktarget.sql.gz-rss.xml",
              sqlite: "jawiki-latest-linktarget.sqlite",
            }
          - {
              file: "jawiki-latest-categorylinks.sql.gz",
              rss: "jawiki-latest-categorylinks.sql.gz-rss.xml",
              sqlite: "jawiki-latest-categorylinks.sqlite",
            }
    steps:
      - uses: actions/checkout@v4

      - name: Checkout mysql2sqlite
        uses: actions/checkout@v4
        with:
          repository: "mysql2sqlite/mysql2sqlite"
          path: "mysql2sqlite"

      - name: Get previous pubDate
        uses: actions/cache@v4
        with:
          path: prevPubDate.txt
          key: rss-${{matrix.files.file}}

      - name: Date to environment variable
        run: echo "PREV_PUB_DATE=$(cat prevPubDate.txt 2>/dev/null || echo 'ðŸ˜Š')" >> $GITHUB_ENV

      - name: Get RSS pubDate and set UPDATED
        run: |
          PUB_DATE=$(
            wget -q -O - https://dumps.wikimedia.org/jawiki/latest/${{matrix.files.rss}} | 
            awk -F'<pubDate>|</pubDate>' '{if ($2 != "") print $2}'
          )

          PREV_PUB_DATE=$(cat prevPubDate.txt 2>/dev/null || echo 'ðŸ˜Š')
          if [ "$PREV_PUB_DATE" != "$PUB_DATE" ]; then
            echo "UPDATED=true" >> $GITHUB_ENV
          else
            echo "UPDATED=" >> $GITHUB_ENV # empty if false
          fi

      - name: Download
        if: ${{env.UPDATED}}
        run: |
          wget -q -O temp.sql.gz https://dumps.wikimedia.org/jawiki/latest/${{matrix.files.file}}

      - name: Extract
        if: ${{env.UPDATED}}
        run: |
          7z x temp.sql.gz
          rm temp.sql.gz

      - name: Convert by mysql2sqlite.sh
        id: mysql2sqlite-sh
        if: ${{env.UPDATED}}
        continue-on-error: true
        run: |
          mysql2sqlite/mysql2sqlite temp.sql | sqlite3 ${{matrix.files.sqlite}}

      - uses: actions/setup-python@v5
        if: ${{env.UPDATED && steps.mysql2sqlite-sh.outcome == 'failure'}}
        with:
          python-version: "3.12"

      - name: Install dependencies for python mysql2sqlite
        if: ${{env.UPDATED && steps.mysql2sqlite-sh.outcome == 'failure'}}
        run: |
          pip install mysql-to-sqlite3
          sudo apt-get update
          sudo apt-get install pv

      - name: Start MySQL
        if: ${{env.UPDATED && steps.mysql2sqlite-sh.outcome == 'failure'}}
        uses: shogo82148/actions-setup-mysql@v1
        with:
          mysql-version: "9.0"
          root-password: root
          my-cnf: |
            skip_innodb_doublewrite
            disable_log_bin
            innodb_log_writer_threads=OFF
            innodb_dedicated_server=ON
            innodb_flush_log_at_trx_commit=2
            sync_binlog=0

      - name: Import sql to mysql
        if: ${{env.UPDATED && steps.mysql2sqlite-sh.outcome == 'failure'}}
        run: |
          mysql -u root -proot -e "CREATE DATABASE IF NOT EXISTS jawiki;"
          pv -f temp.sql | mysql -u root -proot jawiki

      - name: Export to sqlite
        if: ${{env.UPDATED && steps.mysql2sqlite-sh.outcome == 'failure'}}
        run: |
          mysql2sqlite -f ${{matrix.files.sqlite}} -d jawiki -u root --mysql-password root

      - name: Compress
        if: ${{env.UPDATED}}
        run: |
          mkdir -p artifacts
          filesize=$(stat --format="%s" ${{matrix.files.sqlite}})
          if((filesize <= 2147483648)); then
            7z a artifacts/${{matrix.files.sqlite}}.7z ${{matrix.files.sqlite}}
          else
            7z a -v1999m artifacts/${{matrix.files.sqlite}}.7z ${{matrix.files.sqlite}}
          fi

      - name: Upload Artifact
        if: ${{env.UPDATED}}
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.files.sqlite}}.7z
          path: artifacts/*
          if-no-files-found: error

  release:
    needs: download
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4

      - name: Get Date
        run: echo "DATE=$(TZ=JST-9 date '+%Y.%-m.%-d')" >> $GITHUB_ENV

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts/
          merge-multiple: true

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.DATE }}
          name: ${{ env.DATE }}
          body: ${{ env.DATE }}
          files: |
            ./artifacts/*
